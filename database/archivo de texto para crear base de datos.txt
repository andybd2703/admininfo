DROP DATABASE IF EXISTS side_db;
CREATE DATABASE side_db;
USE side_db;

DROP TABLE IF EXISTS carrito;
DROP TABLE IF EXISTS favoritos;
DROP TABLE IF EXISTS eventos;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(100) NOT NULL UNIQUE,
  email VARCHAR(150) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  birthdate DATE NOT NULL,
  id_number VARCHAR(50) NOT NULL UNIQUE,
  phone_number VARCHAR(20) NOT NULL,
  role ENUM('admin', 'usuario', 'organizador') NOT NULL DEFAULT 'usuario',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE eventos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  descripcion TEXT,
  imagen VARCHAR(255),
  fecha DATE NOT NULL,
  hora TIME NOT NULL,
  edad_minima INT NOT NULL,
  precio_platino_full DECIMAL(10, 2) NOT NULL,
  precio_vip_full DECIMAL(10, 2) NOT NULL,
  precio_general_full DECIMAL(10, 2) NOT NULL,
  vender_comida BOOLEAN NOT NULL,
  vender_bebidas_alcoholicas BOOLEAN NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  usuario_id INT NOT NULL,
  FOREIGN KEY (usuario_id) REFERENCES users(id)
);

CREATE TABLE favoritos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  evento_id INT NOT NULL,
  UNIQUE(usuario_id, evento_id),
  FOREIGN KEY (usuario_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (evento_id) REFERENCES eventos(id) ON DELETE CASCADE
);

CREATE TABLE carrito (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  evento_id INT NOT NULL,
  categoria ENUM('general', 'vip', 'platino') NOT NULL,
  cantidad INT NOT NULL DEFAULT 1,
  UNIQUE(usuario_id, evento_id, categoria),
  FOREIGN KEY (usuario_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (evento_id) REFERENCES eventos(id) ON DELETE CASCADE
);

---------------------------------------------------------------------------------------------
cuando se cree un usuario usar este comando para darle rol de admin:


USE side_db;
UPDATE users
SET role = 'admin'
WHERE id = 1;

